AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda resource stack creation using Amplify CLI
Parameters:
  appUrl:
    Type: String
    Description: App's base URL
  appName:
    Type: String
    Description: App's name
  bucketName:
    Type: String
    Description: Desployment bucket name
  modules:
    Type: String
    Default: ''
    Description: Comma-delimmited list of modules to be executed by a lambda trigger.
      Sent to resource as an env variable.
  env:
    Type: String
Conditions:
  ShouldNotCreateEnvResources:
    Fn::Equals:
    - Ref: env
    - NONE
Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      aws:asset:path: "./src"
      aws:asset:property: Code
    Properties:
      Handler: index.handler
      FunctionName:
        Fn::If:
        - ShouldNotCreateEnvResources
        - Fn::Join:
          - '-'
          - - !Ref appName
            - lambda
            - custom-message
        - Fn::Join:
          - '-'
          - - !Ref appName
            - lambda
            - custom-message
            - !Ref env
      Environment:
        Variables:
          ENV:
            Ref: env
          MODULES:
            Ref: modules
          REGION:
            Ref: AWS::Region
          APP_URL:
            Ref: appUrl
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Runtime: nodejs10.x
      Timeout: '25'
      Code:
        S3Bucket: !Ref bucketName
        S3Key:
          Fn::Join:
            - ''
            - - amplify-builds/
              - !Ref appName
              - -lambda-custom-message-build.zip
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::If:
        - ShouldNotCreateEnvResources
        - Fn::Join:
          - '-'
          - - !Ref appName
            - role
            - lambda
            - custom-message
        - Fn::Join:
          - '-'
          - - !Ref appName
            - role
            - lambda
            - custom-message
            - !Ref env
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
  LambdaExecutionPolicy:
    DependsOn:
    - LambdaExecutionRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: lambda-execution-policy
      Roles:
      - Ref: LambdaExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::Sub:
            - arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
            - region:
                Ref: AWS::Region
              account:
                Ref: AWS::AccountId
              lambda:
                Ref: LambdaFunction
Outputs:
  Name:
    Value:
      Ref: LambdaFunction
  Arn:
    Value:
      Fn::GetAtt:
      - LambdaFunction
      - Arn
  LambdaExecutionRole:
    Value:
      Ref: LambdaExecutionRole
  Region:
    Value:
      Ref: AWS::Region
